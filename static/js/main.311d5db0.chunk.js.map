{"version":3,"sources":["YPath.js","registerServiceWorker.js","index.js","YMap.js","helpers/loadYandexMapScript.js","MarkItem.js","MarkMapItem.js","MarksList.js"],"names":["YPath","map","this","className","style","height","width","YMap","id","apiSrc","init","initYandexMaps","bind","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","marksIdentity","props","marks","placemarks","that","initMap","loadYandexMapScript","ymaps","Map","refs","center","zoom","controls","autoFitToViewport","events","add","clickMap","renderPolygon","e","coords","name","geocode","results","res","go","geoObjects","properties","err","addMark","getCenter","removeAll","line","global","Polyline","strokeColor","strokeWidth","editorMaxPoints","editorMenuManager","items","length","polyline","editor","edgeMove","startEditing","a","v","slice","ind","getIndex","mark","val","geometry","getCoordinates","setState","index","set","setCoordinates","balloon","setData","pm","Placemark","balloonContent","dragIndex","hoverIndex","dragMark","update","$splice","txt","push","dm","remove","splice","ref","getMap","moveMark","delMark","renderMark","yandexLoadPromise","src","Promise","resolve","reject","elem","createElement","type","onload","onerror","body","appendChild","ns","url","RegExp","exec","decodeURIComponent","replace","getNsParamValue","eval","Error","border","padding","marginBottom","backgroundColor","cursor","position","styleCross","top","right","ItemTypes","markTarget","hover","monitor","component","getItem","hoverBoundingRect","findDOMNode","getBoundingClientRect","hoverMiddleY","bottom","hoverClientY","getClientOffset","y","MarkItem","nextProps","nextState","nextContext","isDragging","text","opacity","connectDragSource","connectDropTarget","onClick","deleteMark","preventDefault","DropTarget","connect","dropTarget","DragSource","beginDrag","dragSource","MarkMapItem","renderMapMark","styleMarksList","float","zIndex","left","minHeight","overflowY","maxHeight","styleTxtMark","styleBtnAdd","MarksList","txtMark","value","target","onChange","txtChange","disabled","btnClick","clear","i","DragDropContext","HTML5Backend"],"mappings":"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","file":"static/js/main.311d5db0.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './YPath.css';\nimport YMap from './YMap';\n\nclass YPath extends Component {\n\n  initYandexMaps(map) {\n    this.map = map;\n  }\n\n  render() {\n    return (\n      <div className=\"YPath\" style={{ height: \"100%\", width: \"100%\" }} >\n        <YMap id=\"map\" apiSrc=\"https://api-maps.yandex.ru/2.1/?lang=en_RU\" init={ this.initYandexMaps.bind(this) } />\n      </div>\n    );\n\n  }\n}\n\nexport default YPath;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport YPath from './YPath';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<YPath />, document.getElementById('root'));\nregisterServiceWorker();\n","import React, {\n  Component\n} from 'react';\nimport update from 'immutability-helper';\nimport MarksList from './MarksList';\nimport loadYandexMapScript from './helpers/loadYandexMapScript'\n\nlet marksIdentity = 0;\n\nclass YMap extends Component {\n\n  constructor(props){\n    super(props);\n\n    this.state = {\n      marks: []\n    };\n\n    this.placemarks = [];\n  }\n\n  componentDidMount() {\n    let that = this;\n\n    // Connect the initMap() function within this class to the global window context,\n    // so Yandex Maps can invoke it\n    window.initMap = this.initMap;\n    // Asynchronously load the Yandex Maps script, passing in the callback reference\n    loadYandexMapScript(this.props.apiSrc)\n      .then(() => {\n        window.ymaps.ready(() => {\n          var map = new window.ymaps.Map(that.refs.map.id, {\n            center: [56.735951, 38.853323],\n            zoom: 16,\n            controls: [],\n            autoFitToViewport: 'always'\n          });\n          this.map = map;\n\n          // window.addEventListener(\"resize\", ()=>{\n          //   this.map.container.fitToViewport();\n          // });\n\n          map.events.add('click', this.clickMap.bind(this));\n\n          if (typeof that.props.init === 'function') {\n            that.props.init(map);\n          }\n\n          this.renderPolygon();\n\n        });\n      });\n  }\n\n  clickMap(e) {\n    let coords = e.get('coords');\n    let name = \"\";\n    \n    window.ymaps.geocode( coords, { results: 1 } ).then( function(res){\n      var go = res.geoObjects.get(0);\n      name = go ? go.properties.get('name') : \"\";\n    } ).catch( function(err){\n      console.log('Couldn\\'t detect address. ' + err);\n\n      name = \"\";\n    }).then( ()=>\n    { \n      this.addMark(name, coords);\n    } );\n\n    // if (this.addMark) {\n    //   this.addMark(\"\", coords);\n    // }    \n  }\n\n  getCenter() {\n    if (this.map) {\n      return this.map.getCenter();\n    }\n  }\n\n  renderPolygon() {\n    if ( this.map ) {\n      let map = this.map;\n\n      map.geoObjects.removeAll();\n\n      var line = new global.ymaps.Polyline( [] , {}, \n        {\n          strokeColor: \"#00000088\",\n          strokeWidth: 4,\n\n          editorMaxPoints: 0,\n          \n          editorMenuManager: function (items) {\n            items.length = 0;\n            return items;\n        }        \n      });\n      this.polyline = line;\n\n      line.editor.events.add('vertexdragend', this.edgeMove, this);\n\n      map.geoObjects.add(line);\n\n      \n      line.editor.startEditing();\n\n    }\n  }\n\n  edgeMove(a) {\n    let v = a.get('vertexModel');\n\n    const marks = this.state.marks.slice();\n    \n    let ind = v.getIndex();\n    let mark = marks[ind];\n    marks[ind] = { id: mark.id, val: mark.val, coords: v.geometry.getCoordinates() };\n  \n    this.setState({\n      marks: marks\n    });\n  }\n\n  renderMark(mark, index){\n    if (this.polyline) {\n      this.polyline.geometry.set(index, mark.coords);\n\n      if (!this.placemarks[mark.id]) {\n        let pm = new window.ymaps.Placemark(mark.coords, {\n          balloonContent: mark.val\n        });\n        this.placemarks[mark.id] = pm;\n        this.map.geoObjects.add(pm);\n      } else {\n        this.placemarks[mark.id].geometry.setCoordinates(mark.coords);\n        this.placemarks[mark.id].balloon.setData(mark.val);\n      }\n    }\n  }\n\n  getMap(){\n    return this.map;\n  }\n\n  moveMark(dragIndex, hoverIndex) {\n    const marks = this.state.marks;\n    const dragMark = marks[dragIndex];\n\n    this.setState(\n      update(this.state, {\n        marks: {\n          $splice: [\n            [dragIndex, 1],\n            [hoverIndex, 0, dragMark]\n          ],\n        },\n      })\n    );\n  }\n\n  addMark(txt, coords) {\n    let marks = this.state.marks.slice();\n\n    if (!txt) {\n      txt = 'Item ' + (marksIdentity+1);\n    }\n    if (!coords) {\n      coords = this.getCenter();\n    }\n\n    marks.push({\n      id: 'mark' + (++marksIdentity),\n      val: txt,\n      coords: coords\n    });\n\n    //this.polyline.editor.setOptions({maxPoints: marks.length});\n    \n    this.setState({\n      marks: marks\n    });\n  }\n\n  delMark(index) {\n    let dm = this.state.marks[index];\n    this.map.geoObjects.remove(this.placemarks[dm.id]);\n    delete this.placemarks[dm.id];\n\n\n    let marks = this.state.marks.slice();\n    marks.splice(index, 1);\n\n    this.polyline.geometry.splice(index, 1);\n\n    this.setState({\n      marks: marks\n    });\n  }\n   \n  render() {\n    return ( \n      <div style={{ height: \"100%\", width: \"100%\" }} >\n        <div className=\"YMap\" id={ this.props.id } ref=\"map\" style={{ height: \"100%\", width: \"100%\" }} />\n        <MarksList getMap={ this.getMap.bind(this) } marks={ this.state.marks } \n          moveMark={ this.moveMark.bind(this) } addMark={ this.addMark.bind(this) } delMark={ this.delMark.bind(this) } \n          renderMark={ this.renderMark.bind(this) } />\n\t\t\t\t))\n      </div >\n    );\n  }\n}\n\nexport default YMap;","\nlet yandexLoadPromise = null;\n\nexport default function loadYandexMapScript(src) {\n  src = src || 'https://api-maps.yandex.ru/2.1/?lang=en_RU';\n  yandexLoadPromise = yandexLoadPromise || new Promise((resolve, reject) => {\n    var elem = document.createElement('script');\n    elem.type = 'text/javascript';\n    elem.src = src;\n    elem.onload = resolve;\n    elem.onerror = function (e) {\n      return reject(e);\n    };\n    document.body.appendChild(elem);\n  }).then(() => {\n    var ns = getNsParamValue(src);\n    if (ns && ns !== 'ymaps') {\n      (1, eval)('var ymaps = ' + ns + ';');\n    }\n    return new Promise((resolve) => {\n      if (!global.ymaps) {\n        throw new Error('Failed to find ymaps in the global scope');\n      }\n      if (!global.ymaps.ready) {\n        throw new Error('ymaps.ready is missing');\n      }\n      return window.ymaps.ready(resolve);\n    });\n  });\n  return yandexLoadPromise;\n}\n\nfunction getNsParamValue(url) {\n  var results = RegExp('[\\\\?&]ns=([^&#]*)').exec(url);\n  return results === null ? '' : decodeURIComponent(results[1].replace(/\\+/g, ' '));\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { findDOMNode } from 'react-dom';\nimport { DragSource, DropTarget } from 'react-dnd';\n\nconst style = {\n\tborder: '1px dashed gray',\n\tpadding: '0.5rem 1rem',\n\tmarginBottom: '.5rem',\n\tbackgroundColor: 'white',\n\tcursor: 'move',\n\tposition: \"relative\"\n};\n\nconst styleCross = {\n\twidth: \"30px\", \n\theight: \"30px\",\n\tbackgroundColor: \"white\",\n\tcursor: \"pointer\",\n\tposition: \"absolute\",\n\ttop: \"2px\",\n\tright: \"2px\",\n\tborder: \"2px dashed red\"\n};\n\nconst markSource = {\n\tbeginDrag(props) {\n\t\treturn {\n\t\t\tid: props.id,\n\t\t\tindex: props.index,\n\t\t}\n\t}\n};\n\nconst ItemTypes = {\n\tMARK: 'mark'\n};\n\nconst markTarget = {\n\thover(props, monitor, component) {\n\t\tconst dragIndex = monitor.getItem().index\n\t\tconst hoverIndex = props.index\n\n\t\t// Don't replace items with themselves\n\t\tif (dragIndex === hoverIndex) {\n\t\t\treturn\n\t\t}\n\n\t\t// Determine rectangle on screen\n\t\tconst hoverBoundingRect = findDOMNode(component).getBoundingClientRect()\n\n\t\t// Get vertical middle\n\t\tconst hoverMiddleY = (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2\n\n\t\t// Determine mouse position\n\t\tconst clientOffset = monitor.getClientOffset()\n\n\t\t// Get pixels to the top\n\t\tconst hoverClientY = clientOffset.y - hoverBoundingRect.top\n\n\t\t// Only perform the move when the mouse has crossed half of the items height\n\t\t// When dragging downwards, only move when the cursor is below 50%\n\t\t// When dragging upwards, only move when the cursor is above 50%\n\n\t\t// Dragging downwards\n\t\tif (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n\t\t\treturn\n\t\t}\n\n\t\t// Dragging upwards\n\t\tif (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n\t\t\treturn\n\t\t}\n\n\t\t// Time to actually perform the action\n\t\tprops.moveMark(dragIndex, hoverIndex)\n\n\t\t// Note: we're mutating the monitor item here!\n\t\t// Generally it's better to avoid mutations,\n\t\t// but it's good here for the sake of performance\n\t\t// to avoid expensive index searches.\n\t\tmonitor.getItem().index = hoverIndex\n\t},\n}\n\nclass MarkItem extends Component {\n\t\n\tstatic propTypes = {\n\t\tconnectDragSource: PropTypes.func.isRequired,\n\t\tconnectDropTarget: PropTypes.func.isRequired,\n\t\tindex: PropTypes.number.isRequired,\n\t\tisDragging: PropTypes.bool.isRequired,\n\t\tid: PropTypes.any.isRequired,\n\t\ttext: PropTypes.string.isRequired,\n\t\tmoveMark: PropTypes.func.isRequired,\n\t\trenderMark: PropTypes.func.isRequired\n\t}\n\n\tshouldComponentUpdate(nextProps, nextState, nextContext) {\n\t\tvar res = (nextProps.mark.id !== this.props.mark.id) || \n\t\t\t( (nextProps.mark.coords[0] !== this.props.mark.coords[0]) || (nextProps.mark.coords[1] !== this.props.mark.coords[1])) ||\n\t\t\t(nextProps.index !== this.props.index) ||\n\t\t\t(nextProps.isDragging === true) || (this.props.isDragging === true);\n\t\treturn res;\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\ttext,\n\t\t\tisDragging,\n\t\t\tconnectDragSource,\n\t\t\tconnectDropTarget,\n\t\t} = this.props\n\t\tconst opacity = isDragging ? 0 : 1\n\n\t\treturn connectDragSource(\n\t\t\tconnectDropTarget(<div style={{ ...style, opacity }}>\n\t\t\t\t\t{text} <button onClick={ (e)=>{ this.props.deleteMark(this.props.index); e.preventDefault(); } } style={ styleCross } >x</button>\n\t\t\t\t</div>)\n\t\t)\n\t}\n}\n\nexport default DropTarget(ItemTypes.MARK, markTarget, connect => ({\n\tconnectDropTarget: connect.dropTarget(),\n}))(DragSource(ItemTypes.MARK, markSource, (connect, monitor) => ({\n\tconnectDragSource: connect.dragSource(),\n\tisDragging: monitor.isDragging(),\n}))(MarkItem));\n\n/*\n\n*/","import {Component} from 'react';\n\nexport default class MarkMapItem extends Component {\n\n\trenderMapMark() {\n\t\tthis.props.renderMark(this.props.mark, this.props.index);\n\t}\n\n  render(){\n    this.renderMapMark();\n\n    return null;\n  }\n}","import React, { Component } from 'react';\nimport { DragDropContext } from 'react-dnd';\nimport HTML5Backend from 'react-dnd-html5-backend';\nimport MarkItem from './MarkItem';\nimport MarkMapItem from './MarkMapItem';\n\nconst styleMarksList = {\n\tfloat: \"left\",\n\tzIndex: 100,\n\ttop: \"10px\",\n\tleft: \"10px\",\n\tposition: \"absolute\",\n\tborder: \"2px dashed green\",\n\tminHeight: \"40px\",\n\tpadding: \"3px\",\n\toverflowY: \"scroll\",\n\tmaxHeight: '95%'\n};\n\nconst styleTxtMark = { \n\tfloat: \"left\", \n\twidth:\"160px\", \n\theight: \"19px\", \n\tmarginBottom:\"0.5rem\" \n};\n\nconst styleBtnAdd = {\n\tfloat:\"left\", \n\twidth: 30,\n\theight: 25, \n\tcursor: \"pointer\"\n};\n\nclass MarksList extends Component {\n\n\tcomponentWillMount(){\n\t\tthis.setState(\t{\n\t\t\ttxt: ''\n\t\t});\t\t\n\t}\n\n\tmoveMark(dragIndex, hoverIndex) {\n\t\tif (this.props.moveMark) {\n\t\t\tthis.props.moveMark(dragIndex, hoverIndex);\n\t\t}\n\t}\n\n\tbtnClick(){\n\t\tif (this.props.addMark){\n\t\t\tthis.props.addMark(this.refs.txtMark.value);\n\t\t}\n\t}\n\n\ttxtChange(e){\n\t\tthis.setState(\t{\n\t\t\ttxt: e.target.value\n\t\t});\n\t}\n\n\tdeleteMark(index){\n\n\t\tif (this.props.delMark){\n\t\t\tthis.props.delMark(index);\n\t\t}\n\t}\n\n\trender() {\n\t\tconst marks = this.props.marks;\n\n\t\treturn (\n\t\t\t<div className=\"MarksList\" style={ styleMarksList }>\n\t\t\t\t<div style={ {} }>\n\t\t\t\t\t<input type=\"text\" id=\"txtMark\" key=\"txtMark\" ref=\"txtMark\" style={ styleTxtMark } onChange={this.txtChange.bind(this)} />\n\t\t\t\t\t<button ref=\"btnAdd\" id=\"btnAdd\" disabled={!this.state.txt} onClick={this.btnClick.bind(this)} style={ styleBtnAdd } >+</button>\n\t\t\t\t</div>\n\t\t\t\t<div style={ {clear: \"both\" } }>\n\t\t\t\t{\n\t\t\t\tmarks.map((mark, i) => (\n\t\t\t\t\t<MarkItem\n\t\t\t\t\t\tkey={mark.id}\n\t\t\t\t\t\tindex={i}\n\t\t\t\t\t\tid={mark.id}\n\t\t\t\t\t\ttext={mark.val}\n\t\t\t\t\t\tmoveMark={this.moveMark.bind(this)}\n\t\t\t\t\t\tdeleteMark={this.deleteMark.bind(this)}\n\t\t\t\t\t\tmark={mark}\n\t\t\t\t\t\trenderMark={this.props.renderMark}\n\t\t\t\t\t/>\n\t\t\t\t)) }\n\t\t\t\t{\n\t\t\t\tmarks.map((mark, i) => (\n\t\t\t\t\t<MarkMapItem\n\t\t\t\t\t\tkey={mark.id}\n\t\t\t\t\t\tindex={i}\n\t\t\t\t\t\tid={mark.id}\n\t\t\t\t\t\ttext={mark.val}\n\t\t\t\t\t\tmark={mark}\n\t\t\t\t\t\trenderMark={this.props.renderMark}\n\t\t\t\t\t/>\n\t\t\t\t))}\t\t\t\t\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n};\n\nexport default  DragDropContext(HTML5Backend)(MarksList);"],"sourceRoot":""}